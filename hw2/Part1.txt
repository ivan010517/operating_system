1.

 enter_region:
    tsl register, lock      ->  mov register, #1
                                swp register, lock
    cmp register, #0
    jne enter_region
    ret

leave_region:
    move lock, #0
    ret

2.
    (a)Q = âˆž
        T / T+S
    (b)Q > T
        T / T+S
    (c)S < Q < T
        T / (T + (T/Q)*S)
        greater than 1/2,
        and less than T / T+S
    (d)Q = S
        T / (T + T*S/Q), Q=S
        => T / (T+T)
        = 1 / 2
    (e)Q nearly 0
        T / (T + T*S/Q), Q->0
        lim Q->0 ( T / (T + T*S/Q) ) = 0

3.
    using 1 thread for recive message from A and 1 thread for B
4.
p1----|--parent----print A=1--------------------------------------------
    p2|--child----|--parent----print B=1--------------------------------
                p3|--child----|--parent---|-----------------print C=2---
                              |         p3|pthread-value+=1--|
                            p4|--child----|-------------------print D=2-
                                        p4|pthread-value+=1--|


    A = 1
    B = 1
    C = 2
    D = 2
